MODULE ItemCustom;

REQUIRE CategoryCustom, ItemAttribute;

NAMESPACE MasterData;

dataItemType 'Тип номенклатуры' = DATA ItemType (Item);
itemType 'Тип номенклатуры' (Item i) = OVERRIDE dataItemType(i), itemType(category(i));
nameItemType 'Тип номенклатуры' (Item i) = name(itemType(i));

CONSTRAINT SETCHANGED(itemType(Item i)) AND NOT itemType(category(i)) == itemType(i) AND itemType(i) AND itemType(category(i))
    MESSAGE 'Тип номенклатуры отличается от типа в категории';

CONSTRAINT SETCHANGED(itemType(Category c)) AND (GROUP MIN TRUE IF NOT itemType(Item i) == itemType(c) AND level(category(i), c) AND itemType(i)) 
    MESSAGE 'Категория содержит номенклатуру с отличным типом';

customChangeValue () += TRUE;
customChangeValue (Item i, ItemAttribute a) +{
    INPUT s = STRING DO{
        IF value(a, s) THEN attribute(i, a) <- value(a, s);
        ELSE NEW v = ItemAttributeValue {
            value(v) <- s;
            itemAttribute(v) <- a;
            attribute(i, a) <- v;
        }
    } 
}

EXTEND FORM item
    PROPERTIES (i) nameItemType
;

EXTEND FORM items
    PROPERTIES (i) READONLY nameItemType
;

DESIGN item {
    header {
        MOVE PROPERTY (nameItemType(i));
    }
}

META extendFormEditable (form, formCaption, type)
FORM form ''##formCaption
    TREE categories c = Category PARENT parent(c)
    PROPERTIES READONLY name(c)
    ORDERS name(c)
    FILTERS itemType(c) == type OR NOT itemType(c)
    FILTERGROUP activeCategory
        FILTER '{Active}' active(c) DEFAULT

    OBJECTS i = Item
    PROPERTIES(i) READONLY name, id, nameCategory, nameUom, reference, class
    ORDERS name(i)
    FILTERS itemType(i) == type
    FILTERGROUP category
        FILTER 'By category' level(category(i), c) DEFAULT
    FILTERGROUP active
        FILTER '{Active}' active(i) 'F8' DEFAULT
        FILTER 'Archived' archived(i) 'F7'

    LIST Item OBJECT i
;

@extendFormEditable(form);

DESIGN form {
    OBJECTS {
        NEW pane {
            horizontal = TRUE;
            fill = 1;
            NEW options {
                fill = 1;
                width = 200;
                NEW categories {
                    fill = 1;
                    MOVE BOX(TREE categories);
                }
                NEW tabs {
                    fill = 1;
                    tabbed = TRUE;
                }
            }
            NEW details {
                fill = 3;
                width = 200;
                NEW filters {
                    caption = 'Filters';
                    horizontal = TRUE;
                    MOVE FILTERGROUP(category);
                    MOVE FILTERGROUP(active);
                }
                MOVE BOX(i) {
                    caption = '';
                    GRID(i) { defaultComponent = TRUE; }
                }
            }

        }
    }
}
END

@extendFormEditable(equipments, 'Оборудование', ItemType.equipment);

@extendFormEditable(services, 'Услуги', ItemType.service);

@extendFormEditable(materials, 'Материалы', ItemType.equipment);