MODULE Task;

REQUIRE ProjectManagementSettings, Employee,
        Doc, FileUtils,
        TaskType, TaskStatus, TaskPriority, TaskTag;

PRIORITY MasterData;

NAMESPACE ProjectManagement;

CLASS Task 'Task';

readonly = ABSTRACT CASE BOOLEAN (Task);

name '{Name}' = DATA ISTRING (Task) CHARWIDTH 30 IN id;

author 'Author' = DATA Employee (Task);
nameAuthor 'Author' (Task t) = name(author(t));
WHEN SET(Task t IS Task) AND NOT author(t) AND currentUser() IS Employee DO author(t) <- currentUser();

assignedTo 'Assigned to' = DATA Employee (Task);
nameAssignedTo 'Assigned to' (Task t) = name(assignedTo(t));

deadline 'Deadline' = DATA DATE (Task);

description 'Description' = DATA RICHTEXT (Task) CHARWIDTH 20;

status 'Status' = DATA TaskStatus (Task);
nameStatus 'Status' (Task t) = name(status(t)) IN id;

closed 'Closed' (Task t) = closed(status(t));
opened 'Opened' (Task t) = t IS Task AND NOT closed(t);

type 'Type' = DATA TaskType (Task);
nameType 'Type' (Task t) = name(type(t)) IN id;

WHEN LOCAL SET(Task t IS Task) AND NOT CHANGED(type(t)) DO type(t) <- defaultTaskType();

priority 'Priority' = DATA TaskPriority (Task);
namePriority 'Priority' (Task t) = name(priority(t));
idColorPriority (Task t) = idColor(priority(t));
rgbColorPriority (Task t) = rgbColor(priority(t));

in 'Incl.' = DATA BOOLEAN (Task, TaskTag);
tags 'Tags' (Task t) = GROUP CONCAT name(TaskTag tg) IF in(t, tg), ', ' ORDER name(tg), tg;

FORM task 'Task'
    OBJECTS t = Task PANEL
    PROPERTIES(t) name, nameStatus, 
                  nameAuthor, nameAssignedTo,
                  nameType, namePriority, tags, 
                  deadline, description

    EDIT Task OBJECT t
;

DESIGN task {
    OBJECTS {
        NEW header {
            NEW main {
                horizontal = TRUE;
                alignment = STRETCH;
                MOVE PROPERTY(name(t)) { flex = 1; fontSize = 16; }
                MOVE PROPERTY(nameStatus(t));
            }
            NEW params {
                lines = 2;
                alignment = STRETCH;
                MOVE PROPERTY(nameAuthor(t));
                MOVE PROPERTY(nameAssignedTo(t));
                MOVE PROPERTY(nameType(t));
                MOVE PROPERTY(namePriority(t));
                MOVE PROPERTY(tags(t));
                MOVE PROPERTY(deadline(t));
            }
        }
        NEW details {
            tabbed = TRUE;
            fill = 1;
            NEW description {
                caption = 'Description';
                MOVE PROPERTY(description(t)) { caption = ''; fill = 1; }
            }
        }
    }
}


FORM tasks '{Tasks}'
    OBJECTS t = Task BACKGROUND rgbColorPriority(t)
    PROPERTIES(t) READONLY 
                  name, nameAuthor, nameAssignedTo, nameStatus, nameType, namePriority, tags, deadline, closed
    PROPERTIES(t) NEWSESSION NEW, EDIT, DELETE

    FILTERGROUP active
        FILTER 'Opened' opened(t) 'F8' DEFAULT
        FILTER 'Closed' closed(t) 'F7'

    FILTERGROUP my
        FILTER 'My tasks' author(t) = currentUser() 'F6'
        FILTER 'Assigned to me' assignedTo(t) = currentUser() 'F5'
    
    LIST Task OBJECT t
;

@defineDocObjectsForm(tasks, t, '{Tasks}');

@defineObjectFiles(task, t, 'Task file');

DESIGN tasks {
    PROPERTY(tags(t)) { valueHeight = 18; }
}

NAVIGATOR {
    operations {
        NEW tasks;
    }
}